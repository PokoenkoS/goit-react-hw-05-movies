{"version":3,"file":"static/js/901.1e674edd.chunk.js","mappings":"2PAEaA,EAAOC,EAAAA,EAAAA,KAAH,+LAUJC,EAASD,EAAAA,EAAAA,OAAH,icAkBNE,EAAQF,EAAAA,EAAAA,MAAH,6Q,SCOlB,EAjCkB,SAAC,GAAe,IAAdG,EAAa,EAAbA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYE,OAEA,UAACP,EAAD,CAAMI,SAVa,SAAAI,GAEjB,GADAA,EAAEC,iBACiB,KAAhBH,EAAMI,OACL,OAAOC,MAAM,+BAEjBP,EAASE,EACT,EAIF,WACA,SAACH,EAAD,CACIS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAlBe,SAAAR,GAAC,OAAID,EAASC,EAAES,cAAcX,MAAMY,cAAnC,EAmBhBZ,MAAOA,KAET,SAACJ,EAAD,CAAQU,KAAK,SAAb,UACE,yCAKD,E,SCEL,EA7Be,WACb,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,EAAAA,QAAiBH,GAChBI,MAAK,SAAAC,GAAQ,OACdT,GAAU,OAAIS,EAASC,SADT,GAIjB,GAAE,CAACN,IAOF,OAEJ,4BACA,SAAC,EAAD,CAAYpB,SARe,SAAA2B,GACvBR,EAAe,CAACC,MAAMO,GAEnB,IAMNZ,EAAOa,OAAQ,IAAI,UAAC,EAAAC,SAAD,gBAAW,SAACC,EAAA,EAAD,CAAWH,KAAQZ,SAG/C,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.js","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n  \nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #21acda;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n  \nexport const Button = styled.button`\n    display: inline-block;\n    width: 50px;\n    height: 48px;\n    border: 0;\n    background-image:url('https://image.flaticon.com/icons/svg/149/149852.svg');;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n        opacity: 1;\n    }\n`;\n  \nexport const Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import React from \"react\";\nimport { useState } from \"react\";\nimport {Form, Input, Button} from './SearchForm.styled';\n\nconst SearchForm =({onSubmit})=> {\nconst [value, setValue] = useState('');\n\nconst handleChange = e => setValue(e.currentTarget.value.toLowerCase());\n   \nconst handleSubmit = e => {\n    e.preventDefault();\n    if(value.trim() ===\"\"){\n        return alert('Enter the name of the movie')\n    }\n    onSubmit(value)\n   }\n\n  return (\n\n  <Form onSubmit={handleSubmit} >\n  <Input    \n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movies\"\n      onChange={handleChange}\n      value={value}\n    />\n    <Button type=\"submit\" >\n      <span >Search</span>\n    </Button>\n  </Form>\n\n        )\n    }\n\n\nexport default SearchForm","import { useSearchParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport movieApi from '../components/Api'\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearhParams ]= useSearchParams();\n\n  const query = searchParams.get('query');\n \n  useEffect(() => {\n    if (query) {\n      movieApi.getFilm(query)\n      .then(response => \n      setMovies([...response.results])\n       );\n    }\n  }, [query])\n\n  const formSubmitHendler =data=> {\n    setSearhParams({query:data});\n    \n      }\n\n    return (\n\n<div>\n<SearchForm onSubmit={formSubmitHendler}/>\n{movies.length >0 &&<Suspense> <MovieList data = {movies}/></Suspense>}\n</div>\n);\n  };\n \nexport default Movies;"],"names":["Form","styled","Button","Input","onSubmit","useState","value","setValue","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","movies","setMovies","useSearchParams","searchParams","setSearhParams","query","get","useEffect","movieApi","then","response","results","data","length","Suspense","MovieList"],"sourceRoot":""}