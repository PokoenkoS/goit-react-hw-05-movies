{"version":3,"file":"static/js/73.a760f0b3.chunk.js","mappings":"mPAEaA,EAAMC,EAAAA,EAAAA,IAAH,0CAIHC,EAAKD,EAAAA,EAAAA,GAAH,uHAOFE,EAAKF,EAAAA,EAAAA,GAAH,oNAUFG,EAAKH,EAAAA,EAAAA,GAAH,0H,SCuBZ,EAzCU,WACT,IAASI,GAAYC,EAAAA,EAAAA,MAAZD,QACb,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZIC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,oBAA8BN,GAC7BO,MAAK,SAAAC,GAAc,IAAML,EAASK,EAASC,KAAKC,KAAI,SAAAC,GACjD,MAAO,CAACC,KAAMD,EAAMC,KAAMC,UAAWF,EAAME,UAAWC,GAAIH,EAAMI,UAAWC,MAAOL,EAAMM,aACzF,IACDb,EAAUD,EACX,GAIJ,GAAE,CAAEH,KAGL,iCACA,SAACD,EAAD,CAAImB,UAAU,WAAd,oBACiB,IAAhBf,EAAOgB,QACA,iEAEJ,SAACtB,EAAD,UACCM,EAAOO,KAAI,SAAAC,GACR,OACA,UAACb,EAAD,YACI,SAACH,EAAD,CAAKyB,IAAKT,EAAMK,MAAN,kDAA0DL,EAAMK,OAAY,+EAAiFK,IAAKV,EAAMC,QAClL,iCACND,EAAMC,UAHKD,EAAMG,GAMjB,QAQT,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Img = styled.img`\n    width: 100%;\n`;\n\nexport const Ul = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    gap: 10px;\n`;\n\nexport const Li = styled.li`\n    width: 160px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    border-radius: 10px/20px;\n    border: 5px solid  #2e0b82;\n`;\n\nexport const H3 = styled.h3`\n    color: rgb(20, 150, 144);\n    font-size: 40px;\n    text-align: center;\n    padding: 10px;\n`;","import { useEffect, useState } from 'react';\nimport movieApi from '../Api'\nimport {useParams} from 'react-router-dom';\nimport { Img, Ul, Li, H3 } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const {  movieId } = useParams();\nconst [actors, setActors] = useState([]);\n\n    useEffect(() => {\n        movieApi.getInformationActor( movieId)\n        .then(response => { const actors = response.cast.map(actor => {\n            return({name: actor.name, character: actor.character, id: actor.credit_id, photo: actor.profile_path})\n          })\n          setActors(actors)\n        }\n           \n        \n         );\n    }, [ movieId])\n\nreturn (\n    <>\n    <H3 className=\"isHidden\">Actors</H3>\n    {actors.length===0 ?\n            <p>There is no information about actors</p>\n            :\n        <Ul>\n        {actors.map(actor => {\n            return (\n            <Li key={actor.id}>\n                <Img src={actor.photo ? (`https://www.themoviedb.org/t/p/original/${actor.photo}`) : ('https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg')} alt={actor.name}></Img>\n                <p>Actor\n         {actor.name}</p>\n            </Li>\n     \n        )}\n        )\n        } \n    \n        </Ul>\n}\n        </>\n   )\n} \n     \n   export default Cast\n\n\n"],"names":["Img","styled","Ul","Li","H3","movieId","useParams","useState","actors","setActors","useEffect","movieApi","then","response","cast","map","actor","name","character","id","credit_id","photo","profile_path","className","length","src","alt"],"sourceRoot":""}